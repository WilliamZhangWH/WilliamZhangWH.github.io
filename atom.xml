<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>William的个人博客</title>
  <subtitle>iOS Developer.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://WilliamZhangWH.github.io/"/>
  <updated>2016-05-27T05:23:54.000Z</updated>
  <id>http://WilliamZhangWH.github.io/</id>
  
  <author>
    <name>William Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用instancetype取代id的好处</title>
    <link href="http://WilliamZhangWH.github.io/2016/04/26/%E4%BD%BF%E7%94%A8instancetype%E5%8F%96%E4%BB%A3id%E7%9A%84%E5%A5%BD%E5%A4%84/"/>
    <id>http://WilliamZhangWH.github.io/2016/04/26/使用instancetype取代id的好处/</id>
    <published>2016-04-26T05:43:09.000Z</published>
    <updated>2016-05-27T05:23:54.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Would_it_be_beneficial_to_begin_using_instancetype_instead_of_id_3F&quot;&gt;&lt;a href=&quot;#Would_it_be_beneficial_to_begin_using_instancetype_instead_of_id_3F&quot; class=&quot;headerlink&quot; title=&quot;Would it be beneficial to begin using instancetype instead of id?&quot;&gt;&lt;/a&gt;Would it be beneficial to begin using instancetype instead of id?&lt;/h4&gt;&lt;p&gt;There definitely is a benefit. When you use ‘id’, you get essentially no type checking at all. With instancetype, the compiler and IDE know what type of thing is being returned, and can check your code better and autocomplete better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here’s what Apple now says on the subject:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In your code, replace occurrences of id as a return value with instancetype where appropriate. This is typically the case for init methods and class factory methods. Even though the compiler automatically converts methods that begin with “alloc,” “init,” or “new” and have a return type of id to return instancetype, it doesn’t convert other methods. Objective-C convention is to write instancetype explicitly for all methods.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Emphasis mine.  Source: &lt;a href=&quot;https://developer.apple.com/library/ios/releasenotes/ObjectiveC/ModernizationObjC/AdoptingModernObjective-C/AdoptingModernObjective-C.html#//apple_ref/doc/uid/TP40014150-CH1-SW11&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adopting Modern Objective-C&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;With that out of the way, let’s move on and explain why it’s a good idea.&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h5 id=&quot;First_2C_some_definitions_3A&quot;&gt;&lt;a href=&quot;#First_2C_some_definitions_3A&quot; class=&quot;headerlink&quot; title=&quot;First, some definitions:&quot;&gt;&lt;/a&gt;First, some definitions:&lt;/h5&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt;:&lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)initWithBar:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)bar; &lt;span class=&quot;comment&quot;&gt;// initializer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)fooWithBar:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)bar;  &lt;span class=&quot;comment&quot;&gt;// class factory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For a class factory, you should always use instancetype. The compiler does not automatically convert id to instancetype. That id is a generic object. But if you make it an instancetype the compiler knows what type of object the method returns.&lt;/p&gt;
&lt;p&gt;This is not an academic problem. For instance, [[NSFileHandle fileHandleWithStandardOutput] writeData:formattedData] will generate an error on Mac OS X (only) Multiple methods named ‘writeData:’ found with mismatched result, parameter type or attributes. The reason is that both NSFileHandle and NSURLHandle provide a writeData:. Since [NSFileHandle fileHandleWithStandardOutput] returns an id, the compiler is not certain what class writeData: is being called on.&lt;/p&gt;
&lt;p&gt;You need to work around this, using either:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;collection&quot;&gt;[&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;NSFileHandle&lt;/span&gt; *)&lt;/span&gt;&lt;span class=&quot;collection&quot;&gt;[NSFileHandle fileHandleWithStandardOutput]&lt;/span&gt; writeData:formattedData]&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NSFileHandle *fileHandle = &lt;span class=&quot;string&quot;&gt;[NSFileHandle fileHandleWithStandardOutput]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;[fileHandle writeData:formattedData]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Of course, the better solution is to declare fileHandleWithStandardOutput as returning an instancetype. Then the cast or assignment isn’t necessary.&lt;/p&gt;
&lt;p&gt;(Note that on iOS, this example won’t produce an error as only NSFileHandle provides a writeData: there. Other examples exist, such as length, which returns a CGFloat from UILayoutSupport but a NSUInteger from NSString.)&lt;/p&gt;
&lt;p&gt;For initializers, it’s more complicated. When you type this:&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(id)&lt;/span&gt;initWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;…the compiler will pretend you typed this instead:&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(instancetype)&lt;/span&gt;initWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This was necessary for ARC. This is described in Clang Language Extensions Related result types. This is why people will tell you it isn’t necessary to use instancetype, though I contend you should. The rest of this answer deals with this.&lt;/p&gt;
&lt;h5 id=&quot;There_u2019s_three_advantages_3A&quot;&gt;&lt;a href=&quot;#There_u2019s_three_advantages_3A&quot; class=&quot;headerlink&quot; title=&quot;There’s three advantages:&quot;&gt;&lt;/a&gt;There’s three advantages:&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;Explicit.&lt;/strong&gt; Your code is doing what it says, rather than something else.&lt;br&gt;&lt;strong&gt;Pattern.&lt;/strong&gt; You’re building good habits for times it does matter, which do exist.&lt;br&gt;&lt;strong&gt;Consistency.&lt;/strong&gt; You’ve established some consistency to your code, which makes it more readable.&lt;/p&gt;
&lt;h4 id=&quot;Explicit&quot;&gt;&lt;a href=&quot;#Explicit&quot; class=&quot;headerlink&quot; title=&quot;Explicit&quot;&gt;&lt;/a&gt;Explicit&lt;/h4&gt;&lt;p&gt;It’s true that there’s no technical benefit to returning instancetype from an init. But this is because the compiler automatically converts the id to instancetype. You are relying on this quirk; while you’re writing that the init returns an id, the compiler is interpreting it as if it returns an instancetype.&lt;/p&gt;
&lt;p&gt;These are equivalent to the compiler:&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(id)&lt;/span&gt;initWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(instancetype)&lt;/span&gt;initWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;These are not equivalent to your eyes. At best, you will learn to ignore the difference and skim over it. This is not something you should learn to ignore.&lt;/p&gt;
&lt;h4 id=&quot;Pattern&quot;&gt;&lt;a href=&quot;#Pattern&quot; class=&quot;headerlink&quot; title=&quot;Pattern&quot;&gt;&lt;/a&gt;Pattern&lt;/h4&gt;&lt;p&gt;While there’s no difference with init and other methods, there is a difference as soon as you define a class factory.&lt;/p&gt;
&lt;p&gt;These two are not equivalent:&lt;/p&gt;
&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ &lt;span class=&quot;comment&quot;&gt;(id)&lt;/span&gt;fooWithBar:&lt;span class=&quot;comment&quot;&gt;(NSInteger)&lt;/span&gt;bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &lt;span class=&quot;comment&quot;&gt;(instancetype)&lt;/span&gt;fooWithBar:&lt;span class=&quot;comment&quot;&gt;(NSInteger)&lt;/span&gt;bar;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You want the second form. If you are used to typing instancetype as the return type of a constructor, you’ll get it right every time.&lt;/p&gt;
&lt;h4 id=&quot;Consistency&quot;&gt;&lt;a href=&quot;#Consistency&quot; class=&quot;headerlink&quot; title=&quot;Consistency&quot;&gt;&lt;/a&gt;Consistency&lt;/h4&gt;&lt;p&gt;Finally, imagine if you put it all together: you want an init function and also a class factory.&lt;/p&gt;
&lt;p&gt;If you use id for init, you end up with code like this:&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(id)&lt;/span&gt;initWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &lt;span class=&quot;params&quot;&gt;(instancetype)&lt;/span&gt;fooWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;But if you use instancetype, you get this:&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(instancetype)&lt;/span&gt;initWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &lt;span class=&quot;params&quot;&gt;(instancetype)&lt;/span&gt;fooWithBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;bar;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It’s more consistent and more readable. They return the same thing, and now that’s obvious.&lt;/p&gt;
&lt;h4 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h4&gt;&lt;p&gt;Unless you’re intentionally writing code for old compilers, you should use instancetype when appropriate.&lt;/p&gt;
&lt;p&gt;You should hesitate before writing a message that returns id. Ask yourself: Is this returning an instance of this class? If so, it’s an instancetype.&lt;/p&gt;
&lt;p&gt;There are certainly cases where you need to return id, but you’ll probably use instancetype much more frequently.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Would_it_be_beneficial_to_begin_using_instancetype_instead_of_id_3F&quot;&gt;&lt;a href=&quot;#Would_it_be_beneficial_to_begin_using_instancetype_instead_of_id_3F&quot; class=&quot;headerlink&quot; title=&quot;Would it be beneficial to begin using instancetype instead of id?&quot;&gt;&lt;/a&gt;Would it be beneficial to begin using instancetype instead of id?&lt;/h4&gt;&lt;p&gt;There definitely is a benefit. When you use ‘id’, you get essentially no type checking at all. With instancetype, the compiler and IDE know what type of thing is being returned, and can check your code better and autocomplete better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here’s what Apple now says on the subject:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In your code, replace occurrences of id as a return value with instancetype where appropriate. This is typically the case for init methods and class factory methods. Even though the compiler automatically converts methods that begin with “alloc,” “init,” or “new” and have a return type of id to return instancetype, it doesn’t convert other methods. Objective-C convention is to write instancetype explicitly for all methods.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Emphasis mine.  Source: &lt;a href=&quot;https://developer.apple.com/library/ios/releasenotes/ObjectiveC/ModernizationObjC/AdoptingModernObjective-C/AdoptingModernObjective-C.html#//apple_ref/doc/uid/TP40014150-CH1-SW11&quot;&gt;Adopting Modern Objective-C&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;With that out of the way, let’s move on and explain why it’s a good idea.&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术总结" scheme="http://WilliamZhangWH.github.io/categories/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="翻译" scheme="http://WilliamZhangWH.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>GET与POST请求之区别</title>
    <link href="http://WilliamZhangWH.github.io/2016/04/06/GET%E4%B8%8EPOST%E8%AF%B7%E6%B1%82%E4%B9%8B%E5%8C%BA%E5%88%AB/"/>
    <id>http://WilliamZhangWH.github.io/2016/04/06/GET与POST请求之区别/</id>
    <published>2016-04-06T06:18:04.000Z</published>
    <updated>2016-05-27T05:24:56.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.nowamagic.net/librarys/veda/detail/1919&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不再以讹传讹，GET和POST的真正区别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/hyddd/archive/2009/03/31/1426026.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈HTTP中Get与Post的区别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上面的两个参考文档是同行朋友在问完我GET与POST区别之后发给我的，看完之后一头雾水，原本以为很简单的问题，一下子有点丈二和尚摸不着头脑了。于是乎我就开始查找资料，发现了一个很好的国外网站，专门做对比，名叫 &lt;a href=&quot;http://www.diffen.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Diffen&lt;/a&gt;。&lt;br&gt;再输入GET和POST之后，答案就出来了，下面我就简单翻译一下。&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgda.com1.z0.glb.clouddn.com/postImage2.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HTTP &lt;strong&gt;POST&lt;/strong&gt;请求在从客户端发送到服务端时需要在消息体中提供额外的数据。相反的是，&lt;strong&gt;GET&lt;/strong&gt;请求的所有需要的数据都在URL中。HTML表单可以在&amp;lt;form&amp;gt;元素中指定使用&lt;strong&gt;POST&lt;/strong&gt;方法还是&lt;strong&gt;GET&lt;/strong&gt;方法。指定的方法明确了表单数据是如何被提交到服务器的。如果是&lt;strong&gt;GET&lt;/strong&gt;请求，所有表单数据会被编码进URL，作为查询字符参数拼接。通过&lt;strong&gt;POST&lt;/strong&gt;请求，表单数据将出现在HTTP请求的消息体中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;对比表如下&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;GET (HTTP)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;POST (HTTP)&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;历史记录&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;参数被保存在浏览器的历史记录里面，以为这是URL的一部分&lt;/td&gt;
&lt;td&gt;参数不会被保存在浏览器的历史记录中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;收藏&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;可以被收藏&lt;/td&gt;
&lt;td&gt;不可被收藏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;返回/重复提交&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GET请求可以被重复执行，但是如果该HTML已经存在在浏览器的缓存中将不会被重复提交&lt;/td&gt;
&lt;td&gt;浏览器通常会提示用户数据需要被重新提交&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;编码类型(ENCTYPE属性)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;application/x-www-form-urlencoded&lt;/td&gt;
&lt;td&gt;multipart/form-data 或者 application/x-www-form-urlencoded 给二进制数据使用多样编码方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;可以发送，但是放进请求行的参数数据大小将要被限制。最安全的大小是小于2K，某些服务器可以处理到64K&lt;/td&gt;
&lt;td&gt;可以发送参数，包括上传至服务器的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;攻击&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;容易被脚本程序攻击&lt;/td&gt;
&lt;td&gt;比较难以攻击&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;表单数据类型限制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;只允许ASCII字符&lt;/td&gt;
&lt;td&gt;没有限制，二进制数据也可以&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;安全性低于POST，因为URL中包含了发送的数据，所以会被以明文的形式保存在浏览器的记录和服务器的日志中&lt;/td&gt;
&lt;td&gt;比GET安全一些，因为不会被存储&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;表单数据长度限制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;一个安全的URL长度通常限制在2048个字符，但是也视不同浏览器和服务器而不同&lt;/td&gt;
&lt;td&gt;没有限制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;可用性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GET请求不该被用在发送密码和其他一些敏感信息的时候&lt;/td&gt;
&lt;td&gt;POST请求通常用在发送密码和一些敏感信息的时候&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;可见性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对任何人可见(会被展示在浏览器的地址栏)还有对发送的信息量有一点限制&lt;/td&gt;
&lt;td&gt;POST请求在URL中不可见&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;缓存&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;可以被缓存&lt;/td&gt;
&lt;td&gt;不做缓存&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgda.com1.z0.glb.clouddn.com/postImage3.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5728_u670D_u52A1_u7AEF_u5904_u7406_u7684_u5DEE_u5F02&quot;&gt;&lt;a href=&quot;#u5728_u670D_u52A1_u7AEF_u5904_u7406_u7684_u5DEE_u5F02&quot; class=&quot;headerlink&quot; title=&quot;在服务端处理的差异&quot;&gt;&lt;/a&gt;在服务端处理的差异&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;原则上，对一个提交的表单数据处理需要依赖发送的方式，是&lt;strong&gt;GET&lt;/strong&gt;还是&lt;strong&gt;POST&lt;/strong&gt;。由于数据以不同方式进行编码，所以就需要不同的解码机制。因此，一般而言，处理提交时，改变发送方式也需要对脚本做必要的改变。比如，在使用CGI接口时，如果使用GET请求，脚本就会以环境变量(QUERYSTRING)接受数据。但是如果使用POST请求，表单数据就会通过标准输入流(stdin)传递，并且可读字节数将以Content-length头给出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;u63A8_u8350_u7528_u6CD5&quot;&gt;&lt;a href=&quot;#u63A8_u8350_u7528_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;推荐用法&quot;&gt;&lt;/a&gt;推荐用法&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;提交“幂等”表单(那些不“显著改变世界状态”的)时，建议使用GET。换句话说，只涉及查询数据库的表单。另一个观点是，几个幂查询将具有作为一个单一的查询相同的效果。如果数据库更新或其他操作，如触发邮件都参与其中，建议POST的用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自Dropbox开发者博客中的一段话&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器并不知道一个特定的HTML表单是做什么的，但是如果是通过HTTP GET方式提交的，浏览器就会在发生网络错误的时候知道自动重复提交时安全的。如果是通过HTTP POST提交的表单，重复提交可能是不安全的，所以浏览器需要先询问用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果转载请标明出处，谢谢！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.nowamagic.net/librarys/veda/detail/1919&quot;&gt;不再以讹传讹，GET和POST的真正区别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/hyddd/archive/2009/03/31/1426026.html&quot;&gt;浅谈HTTP中Get与Post的区别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上面的两个参考文档是同行朋友在问完我GET与POST区别之后发给我的，看完之后一头雾水，原本以为很简单的问题，一下子有点丈二和尚摸不着头脑了。于是乎我就开始查找资料，发现了一个很好的国外网站，专门做对比，名叫 &lt;a href=&quot;http://www.diffen.com/&quot;&gt;Diffen&lt;/a&gt;。&lt;br&gt;再输入GET和POST之后，答案就出来了，下面我就简单翻译一下。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术总结" scheme="http://WilliamZhangWH.github.io/categories/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="翻译" scheme="http://WilliamZhangWH.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>扩展UIAlertView时otherButtonTitles传参问题解决</title>
    <link href="http://WilliamZhangWH.github.io/2016/03/29/%E6%89%A9%E5%B1%95UIAlertView%E6%97%B6otherButtonTitles%E4%BC%A0%E5%8F%82%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://WilliamZhangWH.github.io/2016/03/29/扩展UIAlertView时otherButtonTitles传参问题解决/</id>
    <published>2016-03-29T08:47:37.000Z</published>
    <updated>2016-05-27T05:25:44.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xqgda.com1.z0.glb.clouddn.com/postImage1.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5B9E_u73B0_u539F_u7406&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;u51FD_u6570_u89E3_u91CA&quot;&gt;&lt;a href=&quot;#u51FD_u6570_u89E3_u91CA&quot; class=&quot;headerlink&quot; title=&quot;函数解释&quot;&gt;&lt;/a&gt;函数解释&lt;/h4&gt;&lt;p&gt;C语言标准库中头文件stdarg.h索引的接口包含了一组能够遍历变长参数列表的宏。主要包含下面几个：&lt;br&gt;1、va_list 用来声明一个表示参数表中各个参数的变量。&lt;br&gt;2、va_start 初始化一个指针来指向变长参数列表的头一个变量（注意，…只能出现在参数表的最后）&lt;br&gt;3、va_arg每次调用时都会返回当前指针指向的变量，并将指针挪至下一个位置，参数的类型需要在这个调用的第二个参数来指定，va_arg也是根据这个参数来判断偏移的距离。&lt;br&gt;4、va_end需要在函数最后调用，来进行一些清理工作。&lt;/p&gt;
&lt;h4 id=&quot;u51FD_u6570_u53C2_u6570_u4F20_u9012_u539F_u7406&quot;&gt;&lt;a href=&quot;#u51FD_u6570_u53C2_u6570_u4F20_u9012_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;函数参数传递原理&quot;&gt;&lt;/a&gt;函数参数传递原理&lt;/h4&gt;&lt;p&gt;函数参数是以数据结构:栈的形式存取,从右至左入栈。&lt;/p&gt;
&lt;p&gt;　　首先是参数的内存存放格式：参数存放在内存的堆栈段中，在执行函数的时候，从最后一个开始入栈。因此栈底高地址，栈顶低地址，举个例子如下：&lt;br&gt;void func(int x, float y, char z);&lt;br&gt;　　那么，调用函数的时候，实参 char z 先进栈，然后是 float y，最后是 int x，因此在内存中变量的存放次序是 x-&amp;gt;y-&amp;gt;z，因此，从理论上说，我们只要探测到任意一个变量的地址，并且知道其他变量的类型，通过指针移位运算，则总可以顺藤摸瓜找到其他的输入变量。&lt;br&gt;　　下面是 &lt;stdarg.h&gt; 里面重要的几个宏定义如下：&lt;br&gt;typedef char&lt;em&gt; va_list;&lt;br&gt;void va_start ( va_list ap, prev_param ); /&lt;/em&gt; ANSI version */&lt;br&gt;type va_arg ( va_list ap, type );&lt;br&gt;void va_end ( va_list ap );&lt;br&gt;va_list 是一个字符指针，可以理解为指向当前参数的一个指针，取参必须通过这个指针进行。&lt;/stdarg.h&gt;&lt;/p&gt;
&lt;p&gt;&lt;step 1=&quot;&quot;&gt; 在调用参数表之前，定义一个 va_list 类型的变量，(假设va_list 类型变量被定义为ap)；&lt;/step&gt;&lt;/p&gt;
&lt;p&gt;&lt;step 2=&quot;&quot;&gt; 然后应该对ap 进行初始化，让它指向可变参数表里面的第一个参数，这是通过 va_start 来实现的，第一个参数是 ap 本身，第二个参数是在变参表前面紧挨着的一个变量,即“…”之前的那个参数；&lt;/step&gt;&lt;/p&gt;
&lt;p&gt;&lt;step 3=&quot;&quot;&gt; 然后是获取参数，调用va_arg，它的第一个参数是ap，第二个参数是要获取的参数的指定类型，然后返回这个指定类型的值，并且把 ap 的位置指向变参表的下一个变量位置；&lt;/step&gt;&lt;/p&gt;
&lt;p&gt;&lt;step 4=&quot;&quot;&gt; 获取所有的参数之后，我们有必要将这个 ap 指针关掉，以免发生危险，方法是调用 va_end，他是输入的参数 ap 置为 NULL，应该养成获取完参数表之后关闭指针的习惯。说白了，就是让我们的程序具有健壮性。通常va_start和va_end是成对出现。&lt;/step&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/hanyonglu/archive/2011/05/07/2039916.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xqgda.com1.z0.glb.clouddn.com/postImage1.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5B9E_u73B0_u539F_u7406&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;
    
    </summary>
    
      <category term="技术总结" scheme="http://WilliamZhangWH.github.io/categories/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="iOS" scheme="http://WilliamZhangWH.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Mars首页View视图切换动画效果</title>
    <link href="http://WilliamZhangWH.github.io/2016/01/29/Mars%E9%A6%96%E9%A1%B5View%E8%A7%86%E5%9B%BE%E5%88%87%E6%8D%A2%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
    <id>http://WilliamZhangWH.github.io/2016/01/29/Mars首页View视图切换动画效果/</id>
    <published>2016-01-29T15:15:41.000Z</published>
    <updated>2016-05-27T05:26:49.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u9879_u76EE_u540D_u79F0_uFF1AWWViewSwitcher&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u540D_u79F0_uFF1AWWViewSwitcher&quot; class=&quot;headerlink&quot; title=&quot;项目名称：WWViewSwitcher&quot;&gt;&lt;/a&gt;项目名称：WWViewSwitcher&lt;/h1&gt;&lt;h3 id=&quot;u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWViewSwitcher&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWViewSwitcher&quot; class=&quot;headerlink&quot; title=&quot;项目地址：https://github.com/WilliamZhangWH/WWViewSwitcher&quot;&gt;&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/WilliamZhangWH/WWViewSwitcher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/WilliamZhangWH/WWViewSwitcher&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;u6548_u679C_u5C55_u793A&quot;&gt;&lt;a href=&quot;#u6548_u679C_u5C55_u793A&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/WilliamZhangWH/WWViewSwitcher/master/screenshot/WWViewSwitcher.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;u5B9E_u73B0_u4EE3_u7801&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u4EE3_u7801&quot; class=&quot;headerlink&quot; title=&quot;实现代码&quot;&gt;&lt;/a&gt;实现代码&lt;/h3&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 获得主页显示位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; positionOfOutsideView = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.subviews&lt;/span&gt; indexOfObject:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.outsideView&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 记录原始页面位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CATransform3D&lt;/span&gt; outsideOriginTransform = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.outsideView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.layer&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CATransform3D&lt;/span&gt; insideOriginTransform = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.insideView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.layer&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *outsideLayer = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.outsideView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.layer&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __block &lt;span class=&quot;built_in&quot;&gt;CATransform3D&lt;/span&gt; outsideRotationAndPerspectiveTransform = &lt;span class=&quot;built_in&quot;&gt;CATransform3DIdentity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 获得主页推后位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outsideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m43&lt;/span&gt; = -&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CATransform3D&lt;/span&gt; changedOutsideRotationTransform = outsideRotationAndPerspectiveTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *insideLayer = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.insideView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.layer&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __block &lt;span class=&quot;built_in&quot;&gt;CATransform3D&lt;/span&gt; insideRotationAndPerspectiveTransform = &lt;span class=&quot;built_in&quot;&gt;CATransform3DIdentity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 获得附页推后位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    insideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m43&lt;/span&gt; = -&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CATransform3D&lt;/span&gt; changeInsideRotationTransform = insideRotationAndPerspectiveTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; == positionOfOutsideView) &amp;#123;&lt;span class=&quot;comment&quot;&gt;/* 主页在后 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = changedOutsideRotationTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* 主页在前 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = changeInsideRotationTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 展开动画 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:DURATION animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 主页动画变换 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m34&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; / -&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m41&lt;/span&gt; = WIDTH/&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m11&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m22&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideRotationAndPerspectiveTransform = &lt;span class=&quot;built_in&quot;&gt;CATransform3DRotate&lt;/span&gt;(outsideRotationAndPerspectiveTransform, M_PI / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f, -&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;f, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outsideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = outsideRotationAndPerspectiveTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 附页动画变换 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m34&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; / -&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m41&lt;/span&gt; = -WIDTH/&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m11&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideRotationAndPerspectiveTransform&lt;span class=&quot;variable&quot;&gt;.m22&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideRotationAndPerspectiveTransform = &lt;span class=&quot;built_in&quot;&gt;CATransform3DRotate&lt;/span&gt;(insideRotationAndPerspectiveTransform, -M_PI / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f, -&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;f, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        insideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = insideRotationAndPerspectiveTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; completion:^(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; finished) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (finished) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/* 收缩动画 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:DURATION animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; == positionOfOutsideView) &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* 主页在后 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    insideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = changeInsideRotationTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    outsideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = outsideOriginTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* 主页在前 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    insideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = insideOriginTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    outsideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = changedOutsideRotationTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; completion:^(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; finished) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;/* 回复原始状态 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                insideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = insideOriginTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                outsideLayer&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = outsideOriginTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;/* 交换view的前后位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; == positionOfOutsideView) &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* 主页在后 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt; sendSubviewToBack:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.insideView&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* 主页在前 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt; sendSubviewToBack:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.outsideView&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5B9E_u73B0_u539F_u7406&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;很明显能看出是两个view在交叉切换，交叉的的过程中伴随着缩放、旋转和移动，这个操作的改变基本上是通过CATransform3D中的矩阵值来改变的。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面是矩阵m11-m44的含义&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct CATra&lt;span class=&quot;label&quot;&gt;nsform3&lt;/span&gt;D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CGFloat &lt;span class=&quot;title&quot;&gt;m11&lt;/span&gt;（x缩放）, &lt;span class=&quot;title&quot;&gt;m12&lt;/span&gt;（y切变）, &lt;span class=&quot;title&quot;&gt;m13&lt;/span&gt;（）, &lt;span class=&quot;title&quot;&gt;m14&lt;/span&gt;（）;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CGFloat &lt;span class=&quot;title&quot;&gt;m21&lt;/span&gt;（x切变）, &lt;span class=&quot;title&quot;&gt;m22&lt;/span&gt;（y缩放）, &lt;span class=&quot;title&quot;&gt;m23&lt;/span&gt;（）, &lt;span class=&quot;title&quot;&gt;m24&lt;/span&gt;（）;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CGFloat &lt;span class=&quot;title&quot;&gt;m31&lt;/span&gt;（）, &lt;span class=&quot;title&quot;&gt;m32&lt;/span&gt;（）, &lt;span class=&quot;title&quot;&gt;m33&lt;/span&gt;（）, &lt;span class=&quot;title&quot;&gt;m34&lt;/span&gt;（透视效果，要操作的这个对象要有旋转的角度，否则没有效果。）;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CGFloat &lt;span class=&quot;title&quot;&gt;m41&lt;/span&gt;（x平移）, &lt;span class=&quot;title&quot;&gt;m42&lt;/span&gt;（y平移）, &lt;span class=&quot;title&quot;&gt;m43&lt;/span&gt;（z平移）, &lt;span class=&quot;title&quot;&gt;m44&lt;/span&gt;（）;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;建议可以修改我源码中的矩阵值来理解具体的含义&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot;&gt;&lt;a href=&quot;#u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot; class=&quot;headerlink&quot; title=&quot;如果有不明白的地方可以给我留言。欢迎交流！&quot;&gt;&lt;/a&gt;如果有不明白的地方可以给我留言。欢迎交流！&lt;/h6&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u9879_u76EE_u540D_u79F0_uFF1AWWViewSwitcher&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u540D_u79F0_uFF1AWWViewSwitcher&quot; class=&quot;headerlink&quot; title=&quot;项目名称：WWViewSwitcher&quot;&gt;&lt;/a&gt;项目名称：WWViewSwitcher&lt;/h1&gt;&lt;h3 id=&quot;u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWViewSwitcher&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWViewSwitcher&quot; class=&quot;headerlink&quot; title=&quot;项目地址：https://github.com/WilliamZhangWH/WWViewSwitcher&quot;&gt;&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/WilliamZhangWH/WWViewSwitcher&quot;&gt;https://github.com/WilliamZhangWH/WWViewSwitcher&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;u6548_u679C_u5C55_u793A&quot;&gt;&lt;a href=&quot;#u6548_u679C_u5C55_u793A&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/WilliamZhangWH/WWViewSwitcher/master/screenshot/WWViewSwitcher.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人项目" scheme="http://WilliamZhangWH.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="iOS开发" scheme="http://WilliamZhangWH.github.io/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>深度模仿谷歌翻译滑动删除动画效果</title>
    <link href="http://WilliamZhangWH.github.io/2016/01/27/%E6%B7%B1%E5%BA%A6%E6%A8%A1%E4%BB%BF%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91%E6%BB%91%E5%8A%A8%E5%88%A0%E9%99%A4%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
    <id>http://WilliamZhangWH.github.io/2016/01/27/深度模仿谷歌翻译滑动删除动画效果/</id>
    <published>2016-01-27T03:46:59.000Z</published>
    <updated>2016-05-27T05:25:52.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u9879_u76EE_u540D_u79F0_uFF1AWWRemoveAnimation&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u540D_u79F0_uFF1AWWRemoveAnimation&quot; class=&quot;headerlink&quot; title=&quot;项目名称：WWRemoveAnimation&quot;&gt;&lt;/a&gt;项目名称：WWRemoveAnimation&lt;/h1&gt;&lt;h3 id=&quot;u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWRemoveAnimation&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWRemoveAnimation&quot; class=&quot;headerlink&quot; title=&quot;项目地址：https://github.com/WilliamZhangWH/WWRemoveAnimation&quot;&gt;&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/WilliamZhangWH/WWRemoveAnimation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/WilliamZhangWH/WWRemoveAnimation&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;u6548_u679C_u5C55_u793A&quot;&gt;&lt;a href=&quot;#u6548_u679C_u5C55_u793A&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/WilliamZhangWH/WWRemoveAnimation/master/screenshot/WWRemoveAnimation.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;u5B9E_u73B0_u539F_u7406&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;在cell上添加一个作为白色背景的view，再在view上添加一个滑动手势&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)awakeFromNib &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; *pan = [[&lt;span class=&quot;built_in&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; alloc]initWithTarget:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; action:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(panToRemove:)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.panGesture&lt;/span&gt; = pan;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pan&lt;span class=&quot;variable&quot;&gt;.maximumNumberOfTouches&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pan&lt;span class=&quot;variable&quot;&gt;.minimumNumberOfTouches&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt; addGestureRecognizer:pan];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;下面代码是对滑动手势的事件处理&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)panToRemove:(&lt;span class=&quot;built_in&quot;&gt;UIPanGestureRecognizer&lt;/span&gt;*)recognizer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 开始移动隐藏分割线 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *edgeLine &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.edgeLines&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        edgeLine&lt;span class=&quot;variable&quot;&gt;.hidden&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.backgroundColor&lt;/span&gt; = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;0.95&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;0.95&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;0.95&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; translation = [recognizer translationInView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; + translation&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [recognizer setTranslation:&lt;span class=&quot;built_in&quot;&gt;CGPointZero&lt;/span&gt; inView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGAffineTransform&lt;/span&gt; transform = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (translation&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;/* 向右移动 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;lt; WIDTH*&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;amp;&amp;amp; transform&lt;span class=&quot;variable&quot;&gt;.b&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) || recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;gt; WIDTH*&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transform = &lt;span class=&quot;built_in&quot;&gt;CGAffineTransformRotate&lt;/span&gt;(transform, M_PI/(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*WIDTH));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;=&lt;span class=&quot;built_in&quot;&gt;CGAffineTransformIdentity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (translation&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;/* 向左移动 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;gt; WIDTH*&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;amp;&amp;amp; transform&lt;span class=&quot;variable&quot;&gt;.b&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) || recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;lt; WIDTH*&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transform = &lt;span class=&quot;built_in&quot;&gt;CGAffineTransformRotate&lt;/span&gt;(transform, -M_PI/(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*WIDTH));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;=&lt;span class=&quot;built_in&quot;&gt;CGAffineTransformIdentity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 结束滑动时的操作 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (recognizer&lt;span class=&quot;variable&quot;&gt;.state&lt;/span&gt; == &lt;span class=&quot;built_in&quot;&gt;UIGestureRecognizerStateEnded&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:&lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt; animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; - WIDTH/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;CGAffineTransformRotate&lt;/span&gt;(transform, -M_PI/(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*WIDTH));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.refreshDataBlock&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.refreshDataBlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;gt; WIDTH) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;=&lt;span class=&quot;built_in&quot;&gt;CGAffineTransformIdentity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:&lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt; animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; + WIDTH/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;CGAffineTransformRotate&lt;/span&gt;(transform, M_PI/(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*WIDTH));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.refreshDataBlock&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.refreshDataBlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:&lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt; animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(WIDTH/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, recognizer&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.transform&lt;/span&gt;=&lt;span class=&quot;built_in&quot;&gt;CGAffineTransformIdentity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *edgeLine &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.edgeLines&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    edgeLine&lt;span class=&quot;variable&quot;&gt;.hidden&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.resultBackgroundView&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.backgroundColor&lt;/span&gt; = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot;&gt;&lt;a href=&quot;#u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot; class=&quot;headerlink&quot; title=&quot;如果有不明白的地方可以给我留言。欢迎交流！&quot;&gt;&lt;/a&gt;如果有不明白的地方可以给我留言。欢迎交流！&lt;/h6&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u9879_u76EE_u540D_u79F0_uFF1AWWRemoveAnimation&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u540D_u79F0_uFF1AWWRemoveAnimation&quot; class=&quot;headerlink&quot; title=&quot;项目名称：WWRemoveAnimation&quot;&gt;&lt;/a&gt;项目名称：WWRemoveAnimation&lt;/h1&gt;&lt;h3 id=&quot;u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWRemoveAnimation&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWRemoveAnimation&quot; class=&quot;headerlink&quot; title=&quot;项目地址：https://github.com/WilliamZhangWH/WWRemoveAnimation&quot;&gt;&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/WilliamZhangWH/WWRemoveAnimation&quot;&gt;https://github.com/WilliamZhangWH/WWRemoveAnimation&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;u6548_u679C_u5C55_u793A&quot;&gt;&lt;a href=&quot;#u6548_u679C_u5C55_u793A&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/WilliamZhangWH/WWRemoveAnimation/master/screenshot/WWRemoveAnimation.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人项目" scheme="http://WilliamZhangWH.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="iOS开发" scheme="http://WilliamZhangWH.github.io/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>谷歌翻译TabBar点击效果动画复刻</title>
    <link href="http://WilliamZhangWH.github.io/2016/01/25/%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91TabBar%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C%E5%8A%A8%E7%94%BB%E5%A4%8D%E5%88%BB/"/>
    <id>http://WilliamZhangWH.github.io/2016/01/25/谷歌翻译TabBar点击效果动画复刻/</id>
    <published>2016-01-25T09:25:06.000Z</published>
    <updated>2016-05-27T05:25:18.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u9879_u76EE_u540D_u79F0_uFF1AWWAnimationTabbar&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u540D_u79F0_uFF1AWWAnimationTabbar&quot; class=&quot;headerlink&quot; title=&quot;项目名称：WWAnimationTabbar&quot;&gt;&lt;/a&gt;项目名称：WWAnimationTabbar&lt;/h1&gt;&lt;h3 id=&quot;u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWAnimationTabbar&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWAnimationTabbar&quot; class=&quot;headerlink&quot; title=&quot;项目地址：https://github.com/WilliamZhangWH/WWAnimationTabbar&quot;&gt;&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/WilliamZhangWH/WWAnimationTabbar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/WilliamZhangWH/WWAnimationTabbar&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;u6548_u679C_u5C55_u793A&quot;&gt;&lt;a href=&quot;#u6548_u679C_u5C55_u793A&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/WilliamZhangWH/WWAnimationTabbar/master/screenshot/WWAnimationTabbar.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;u8C03_u7528_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u8C03_u7528_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;调用方法&quot;&gt;&lt;/a&gt;调用方法&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;increasedHeight为0即为系统TabBar高度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(instancetype)&lt;/span&gt;initWithFrame:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;CGRect&lt;/span&gt;)&lt;/span&gt;frame increasedHeight:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;CGFloat&lt;/span&gt;)&lt;/span&gt;height;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u4EE3_u7406_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u4EE3_u7406_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;代理方法&quot;&gt;&lt;/a&gt;代理方法&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;记录从哪里跳转到哪里&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pp&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(void)&lt;/span&gt;tabBar:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;WWTabBar&lt;/span&gt; *)&lt;/span&gt;tabBar selectedFrom:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;from to:&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;variable&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;to;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u6309_u94AE_u70B9_u51FB_u5706_u5F62_u6269_u5C55_u52A8_u753B_u539F_u7406&quot;&gt;&lt;a href=&quot;#u6309_u94AE_u70B9_u51FB_u5706_u5F62_u6269_u5C55_u52A8_u753B_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;按钮点击圆形扩展动画原理&quot;&gt;&lt;/a&gt;按钮点击圆形扩展动画原理&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;原理：创建CAShapeLayer图层，通过UIBezierPath创建两个绘图路径，再通过CABasicAnimation完成两个绘图路径之间动画转变&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图层创建&amp;gt;&amp;gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight roboconf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;component&quot;&gt;- (CAShapeLayer *)circlePathLayer     &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	if (!_circlePathLayer)     &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_circlePathLayer = [[CAShapeLayer alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_circlePathLayer&lt;span class=&quot;string&quot;&gt;.frame&lt;/span&gt; = self&lt;span class=&quot;string&quot;&gt;.bounds&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CGRect circleFrame = CGRectMake(0, 0, circleRadius, circleRadius);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	circleFrame&lt;span class=&quot;string&quot;&gt;.origin.x&lt;/span&gt; = CGRectGetMidX(_circlePathLayer&lt;span class=&quot;string&quot;&gt;.bounds)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	circleFrame&lt;span class=&quot;string&quot;&gt;.origin.y&lt;/span&gt; = CGRectGetMidY(_circlePathLayer&lt;span class=&quot;string&quot;&gt;.bounds)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	self&lt;span class=&quot;string&quot;&gt;.circleFrame&lt;/span&gt; = circleFrame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_circlePathLayer&lt;span class=&quot;string&quot;&gt;.path&lt;/span&gt; = [self getSmallCirclePath]&lt;span class=&quot;string&quot;&gt;.CGPath&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	self&lt;span class=&quot;string&quot;&gt;.layer.masksToBounds&lt;/span&gt; = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_circlePathLayer&lt;span class=&quot;string&quot;&gt;.fillColor&lt;/span&gt; = Shadow_Color&lt;span class=&quot;string&quot;&gt;.CGColor&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_circlePathLayer&lt;span class=&quot;string&quot;&gt;.backgroundColor=&lt;/span&gt; [UIColor clearColor]&lt;span class=&quot;string&quot;&gt;.CGColor&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	/* 添加到按钮的第一层 这样不会覆盖按钮的Image *    /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	[self&lt;span class=&quot;string&quot;&gt;.layer&lt;/span&gt; insertSublayer:_circlePathLayer atIndex:0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	return _circlePathLayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;绘图路径创建 （需要创建两个路径，第一个是点击时候出现的一个小圆，第二个是覆盖整个按钮的一个大圆）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小圆路径创建&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- &lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;UIBezierPath&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;*)getSmallCirclePath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIBezierPath *&lt;/span&gt;path = [UIBezierPath bezierPathWithArcCenter&lt;span class=&quot;keyword&quot;&gt;:CGPointMake&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.circleFrame.origin.x, self.circleFrame.origin.y)&lt;/span&gt; radius&lt;span class=&quot;keyword&quot;&gt;:circleRadius&lt;/span&gt; startAngle:&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; endAngle&lt;span class=&quot;keyword&quot;&gt;:M_PI*2&lt;/span&gt; clockwise&lt;span class=&quot;keyword&quot;&gt;:YES&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return path&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;大圆路径创建&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; *)getBigCirclePath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 求按钮对角线的距离 即为大圆的半径 这样不论点击按钮的任何位置大圆都可完全覆盖 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 函数功能:已知直角三角形的两个直角边，求斜边*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; bigCircleRadius = hypotf(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.bounds&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.bounds&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.height&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; *path = [&lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; bezierPathWithArcCenter:&lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.circleFrame&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.origin&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.circleFrame&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.origin&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;) radius:bigCircleRadius startAngle:&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; endAngle:M_PI*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; clockwise:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;小圆到大圆的扩张动画&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pathExpandAnimate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; *circleAnimtion = [&lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; animationWithKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;path&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    circleAnimtion&lt;span class=&quot;variable&quot;&gt;.removedOnCompletion&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    circleAnimtion&lt;span class=&quot;variable&quot;&gt;.duration&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    circleAnimtion&lt;span class=&quot;variable&quot;&gt;.fromValue&lt;/span&gt; = (__bridge &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; getSmallCirclePath]&lt;span class=&quot;variable&quot;&gt;.CGPath&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    circleAnimtion&lt;span class=&quot;variable&quot;&gt;.toValue&lt;/span&gt; = (__bridge &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; getBigCirclePath]&lt;span class=&quot;variable&quot;&gt;.CGPath&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _circlePathLayer&lt;span class=&quot;variable&quot;&gt;.path&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; getBigCirclePath]&lt;span class=&quot;variable&quot;&gt;.CGPath&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_circlePathLayer addAnimation:circleAnimtion forKey:&lt;span class=&quot;string&quot;&gt;@&quot;animPath&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;通过按钮的触摸事件来触发动画的开始和结束&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   - (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)showCircleLayerWithPoint:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)position &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; circlePathLayer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;/* 传递手指点击的位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.circlePathLayer&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.position&lt;/span&gt; = position;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; pathExpandAnimate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;/* 执行按钮的事件方法 不写不会执行 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; sendActionsForControlEvents:&lt;span class=&quot;built_in&quot;&gt;UIControlEventTouchDown&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *touch = [touches anyObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; point = [touch locationInView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; showCircleLayerWithPoint:point];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesEnded:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	[_circlePathLayer removeFromSuperlayer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_circlePathLayer = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;u53C2_u8003_u6587_u6863&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u6587_u6863&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;http://www.07net01.com/2015/07/874188.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.07net01.com/2015/07/874188.html&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&quot;u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot;&gt;&lt;a href=&quot;#u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot; class=&quot;headerlink&quot; title=&quot;如果有不明白的地方可以给我留言。欢迎交流！&quot;&gt;&lt;/a&gt;如果有不明白的地方可以给我留言。欢迎交流！&lt;/h6&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u9879_u76EE_u540D_u79F0_uFF1AWWAnimationTabbar&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u540D_u79F0_uFF1AWWAnimationTabbar&quot; class=&quot;headerlink&quot; title=&quot;项目名称：WWAnimationTabbar&quot;&gt;&lt;/a&gt;项目名称：WWAnimationTabbar&lt;/h1&gt;&lt;h3 id=&quot;u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWAnimationTabbar&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u5730_u5740_uFF1Ahttps_3A//github-com/WilliamZhangWH/WWAnimationTabbar&quot; class=&quot;headerlink&quot; title=&quot;项目地址：https://github.com/WilliamZhangWH/WWAnimationTabbar&quot;&gt;&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/WilliamZhangWH/WWAnimationTabbar&quot;&gt;https://github.com/WilliamZhangWH/WWAnimationTabbar&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;u6548_u679C_u5C55_u793A&quot;&gt;&lt;a href=&quot;#u6548_u679C_u5C55_u793A&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/WilliamZhangWH/WWAnimationTabbar/master/screenshot/WWAnimationTabbar.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人项目" scheme="http://WilliamZhangWH.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="iOS开发" scheme="http://WilliamZhangWH.github.io/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建个人博客时遇到的坑</title>
    <link href="http://WilliamZhangWH.github.io/2016/01/23/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://WilliamZhangWH.github.io/2016/01/23/用hexo搭建个人博客时遇到的坑/</id>
    <published>2016-01-23T07:52:07.000Z</published>
    <updated>2016-05-27T05:26:02.000Z</updated>
    
    <content type="html">&lt;h5 id=&quot;u9996_u5148_uFF0C_u6211_u60F3_u8BF4_u7248_u672C_u5F88_u91CD_u8981_uFF0C_u4E0B_u9762_u6211_u8BF4_u4E00_u4E0B_u6211_u5B89_u88C5_u7684_u7248_u672C_u4FE1_u606F_uFF1A&quot;&gt;&lt;a href=&quot;#u9996_u5148_uFF0C_u6211_u60F3_u8BF4_u7248_u672C_u5F88_u91CD_u8981_uFF0C_u4E0B_u9762_u6211_u8BF4_u4E00_u4E0B_u6211_u5B89_u88C5_u7684_u7248_u672C_u4FE1_u606F_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;首先，我想说版本很重要，下面我说一下我安装的版本信息：&quot;&gt;&lt;/a&gt;首先，我想说版本很重要，下面我说一下我安装的版本信息：&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;Homebrew 0.9.5 &lt;/li&gt;
&lt;li&gt;node.js v5.5.0&lt;/li&gt;
&lt;li&gt;npm 3.5.3&lt;/li&gt;
&lt;li&gt;hexo 3.1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;u4F7F_u7528Homebrew_u6765_u5B89_u88C5node-js_u6211_u4E2A_u4EBA_u89C9_u5F97_u5E94_u8BE5_u662F_u6700_u65B9_u4FBF_u7684_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u4F7F_u7528Homebrew_u6765_u5B89_u88C5node-js_u6211_u4E2A_u4EBA_u89C9_u5F97_u5E94_u8BE5_u662F_u6700_u65B9_u4FBF_u7684_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;使用Homebrew来安装node.js我个人觉得应该是最方便的方法&quot;&gt;&lt;/a&gt;使用&lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot; title=&quot;Homebrew&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt;来安装node.js我个人觉得应该是最方便的方法&lt;/h5&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Homebrew安装方法(打开终端窗口, 粘贴一下脚本)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;$ ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;u7136_u540E_u901A_u8FC7Homebrew_u5B89_u88C5node-js&quot;&gt;&lt;a href=&quot;#u7136_u540E_u901A_u8FC7Homebrew_u5B89_u88C5node-js&quot; class=&quot;headerlink&quot; title=&quot;然后通过Homebrew安装node.js&quot;&gt;&lt;/a&gt;然后通过Homebrew安装node.js&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;$ brew install node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;通过Homebrew安装的node.js是最新的版本，我尝试过从&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.js官网&lt;/a&gt;上安装了老的版本，结果之后发生了很多问题，如果你也安装了之前的版本，可以通过下面的命令删除&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rm -rf /usr/local/{bin/{node,npm},lib/node_modules/npm,lib/node,share/man/*/node.*}
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;u201CNPM_3ACOMMAND_NOT_FOUND_u201D__u95EE_u9898_u89E3_u51B3_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u201CNPM_3ACOMMAND_NOT_FOUND_u201D__u95EE_u9898_u89E3_u51B3_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;“NPM:COMMAND NOT FOUND” 问题解决方法&quot;&gt;&lt;/a&gt;“NPM:COMMAND NOT FOUND” 问题解决方法&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;安装node.js的时候会顺带安装npm，需要将根目录下名为.npm的隐藏文件删除，再用brew重新安装以下即可&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打开终端，输入以下命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;cd ~
sudo rm -rf .npm
brew update
brew uninstall npm
brew install npm
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;u90E8_u7F72_u4EE3_u7801_hexo_deploy__u65E0_u6548_uFF0C__u53EF_u4EE5_u901A_u8FC7_u4EE5_u4E0B_u547D_u4EE4_u89E3_u51B3&quot;&gt;&lt;a href=&quot;#u90E8_u7F72_u4EE3_u7801_hexo_deploy__u65E0_u6548_uFF0C__u53EF_u4EE5_u901A_u8FC7_u4EE5_u4E0B_u547D_u4EE4_u89E3_u51B3&quot; class=&quot;headerlink&quot; title=&quot;部署代码 hexo deploy 无效， 可以通过以下命令解决&quot;&gt;&lt;/a&gt;部署代码 hexo deploy 无效， 可以通过以下命令解决&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;执行完之后重新执行hexo deploy本地文件就会部署到远程仓库里面&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot;&gt;&lt;a href=&quot;#u5982_u679C_u6709_u4E0D_u660E_u767D_u7684_u5730_u65B9_u53EF_u4EE5_u7ED9_u6211_u7559_u8A00_u3002_u6B22_u8FCE_u4EA4_u6D41_uFF01&quot; class=&quot;headerlink&quot; title=&quot;如果有不明白的地方可以给我留言。欢迎交流！&quot;&gt;&lt;/a&gt;如果有不明白的地方可以给我留言。欢迎交流！&lt;/h6&gt;</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;u9996_u5148_uFF0C_u6211_u60F3_u8BF4_u7248_u672C_u5F88_u91CD_u8981_uFF0C_u4E0B_u9762_u6211_u8BF4_u4E00_u4E0B_u6211_u5B89_u88C5_u7684_u7248_u672C_u4FE1_u606F_uFF1A&quot;&gt;&lt;a href=&quot;#u9996_u5148_uFF0C_u6211_u60F3_u8BF4_u7248_u672C_u5F88_u91CD_u8981_uFF0C_u4E0B_u9762_u6211_u8BF4_u4E00_u4E0B_u6211_u5B89_u88C5_u7684_u7248_u672C_u4FE1_u606F_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;首先，我想说版本很重要，下面我说一下我安装的版本信息：&quot;&gt;&lt;/a&gt;首先，我想说版本很重要，下面我说一下我安装的版本信息：&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;Homebrew 0.9.5 &lt;/li&gt;
&lt;li&gt;node.js v5.5.0&lt;/li&gt;
&lt;li&gt;npm 3.5.3&lt;/li&gt;
&lt;li&gt;hexo 3.1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;u4F7F_u7528Homebrew_u6765_u5B89_u88C5node-js_u6211_u4E2A_u4EBA_u89C9_u5F97_u5E94_u8BE5_u662F_u6700_u65B9_u4FBF_u7684_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u4F7F_u7528Homebrew_u6765_u5B89_u88C5node-js_u6211_u4E2A_u4EBA_u89C9_u5F97_u5E94_u8BE5_u662F_u6700_u65B9_u4FBF_u7684_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;使用Homebrew来安装node.js我个人觉得应该是最方便的方法&quot;&gt;&lt;/a&gt;使用&lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot; title=&quot;Homebrew&quot;&gt;Homebrew&lt;/a&gt;来安装node.js我个人觉得应该是最方便的方法&lt;/h5&gt;
    
    </summary>
    
      <category term="技术总结" scheme="http://WilliamZhangWH.github.io/categories/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="hexo" scheme="http://WilliamZhangWH.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
